{"version":3,"sources":["script.js"],"names":["UI","listen","_this","this","notifyUser","bind","timerToDisplay","max","min","step","name","options","document","querySelector","AngleInput","controller","angle","controllerPosition","onmousedown","clockDisplay","e","stopPropagation","n","Notification","title","body","onclick","window","open","href","preventDefault","setTimeout","close","innerText","length","minutes","String","seconds","Application","init","resetTimer","minutesToGrad","startTimer","syncTimerDisplay","clickHandler","endTimer","paused","defaultTimer","timeLeft","elapsed","minutesLeft","floor","startTime","secondsLeft","console","timeout","Math","log","timerProcessId","pauseTimer","requestPermission","result","redrawProcessId","then","clearInterval","notificationGranted","Date","now","setInterval","clearTimeout","timer","Pomodoro","gradToMinutes","grad","converted","Object","assign"],"mappings":"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","file":"script.js","sourcesContent":["/* eslint no-var: 0 */\n/* eslint prefer-template: 0 */\n/* eslint no-plusplus: 1 */\n/* eslint vars-on-top: 0 */\n/* eslint prefer-const: 0 */\n/* eslint arrow-parens: 0 */\n\n// TODO: start Pomodoro on clockface click or Enter press;\n// TODO: reset Pomodoro on double click or Delete (Backspace);\n// +TODO: visualize chosen interval by printing its length on the clockface;\n// TODO: visualize movements of the controller handler by adjusting interval length;\n// +TODO: show notification on timer ending;\n// +TODO: prevent starting new pomodoro on repeating clicks on the clockface if we already run;\n// TODO: hide controller on Pomodoro start and show on reset;\n\nvar UI = {\n  listen() {\n    this.notifyUser = this.notifyUser.bind(this);\n    this.timerToDisplay = this.timerToDisplay.bind(this);\n\n    // these are the defaults\n    this.options = {\n      max: 360, // maximum value\n      min: 0, // minimum value\n      step: 6, // [min, min+step, ..., max]\n      name: 'clock-controller', // used for <input name>\n    };\n\n    this.controller = document.querySelector('#clockController');\n    this.angle = AngleInput(this.controller, this.options);\n    this.angle(this.controllerPosition); // set controller position;\n\n    this.clockDisplay = document.querySelector('#clockDisplay');\n    this.clockface = document.querySelector('.clock__face');\n    this.clockface.onmousedown = e => {\n      // console.log(e);\n      this.clickHandler(this.gradToMinutes(this.angle()) * 60);\n      e.stopPropagation();\n    };\n  },\n\n  notifyUser(title, body) {\n    var n = new Notification(title, { body });\n    n.onclick = e => {\n      e.preventDefault();\n      window.open(window.location.href, 'Pomodoro');\n    };\n    setTimeout(n.close.bind(n), 5000);\n  },\n\n  timerToDisplay(minutes, seconds) {\n    this.clockDisplay.innerText =\n      (String(minutes).length !== 2 ? '0' : '') +\n      minutes +\n      ':' +\n      (String(seconds).length !== 2 ? '0' : '') +\n      seconds;\n  },\n};\n\nvar Application = {\n  init() {\n    this.startTimer = this.startTimer.bind(this);\n    this.resetTimer = this.resetTimer.bind(this);\n    this.endTimer = this.endTimer.bind(this);\n    this.minutesToGrad = this.minutesToGrad.bind(this);\n    this.syncTimerDisplay = this.syncTimerDisplay.bind(this);\n    this.clickHandler = this.clickHandler.bind(this);\n    this.paused = false;\n    this.defaultTimer = 1; // default pomodoro timeout in minutes;\n    this.timeLeft = this.defaultTimer * 60;\n    this.controllerPosition = this.minutesToGrad(this.defaultTimer);\n  },\n\n  syncTimerDisplay(timeout) {\n    var elapsed = Date.now() - this.startTime;\n    this.timeLeft = timeout - Math.floor(elapsed / 1000);\n    console.log(\n      `elapsed=${elapsed}, timeout=${timeout}, timeLeft=${this.timeLeft}`,\n    );\n    if (this.timeLeft >= 0) {\n      var minutesLeft = Math.floor(this.timeLeft / 60);\n      var secondsLeft = this.timeLeft - minutesLeft * 60;\n      this.timerToDisplay(minutesLeft, secondsLeft);\n    }\n  },\n\n  clickHandler(timeout) {\n    console.log('clicked');\n    console.log(`timeLeft=${this.timeLeft}`);\n    console.log(`paused=${this.paused}`);\n\n    if (this.timerProcessId) this.pauseTimer();\n    else if (this.paused) {\n      console.log('in resume processing');\n      this.paused = false;\n      this.startTimer(this.timeLeft);\n    } else this.startTimer(timeout);\n  },\n\n  startTimer(timeout) {\n    if (Notification) {\n      Notification.requestPermission().then(result => {\n        if (result === 'denied') console.log('Not granted');\n        else if (result === 'default') console.log('Not default');\n        else this.notificationGranted = true;\n      });\n    }\n    this.startTime = Date.now();\n    this.redrawProcessId = setInterval(this.syncTimerDisplay, 1000, timeout);\n    this.timerProcessId = setTimeout(this.endTimer, timeout * 1000 + 100);\n  },\n\n  endTimer() {\n    // console.log('Time ended!');\n    clearInterval(this.redrawProcessId);\n    clearTimeout(this.timerProcessId);\n    if (this.notificationGranted) this.notifyUser('Pomodoro', 'Time ended');\n  },\n\n  pauseTimer() {\n    clearInterval(this.redrawProcessId);\n    clearTimeout(this.timerProcessId);\n    this.timerProcessId = undefined;\n    this.paused = true;\n  },\n\n  resetTimer() {\n    this.minutesLeft = this.defaultTimer;\n    this.secondsLeft = 0;\n    this.timerToDisplay(this.minutesLeft);\n    if (this.timer) clearInterval(this.timer);\n  },\n\n  minutesToGrad(minutes) {\n    if (minutes >= 0 && minutes <= 15) minutes += 60;\n    return 360 - minutes * 6 + 90;\n  },\n\n  gradToMinutes(grad) {\n    var converted = (360 - grad + 90) / 6;\n    if (converted >= 60 && converted <= 75) converted -= 60;\n    return converted;\n  },\n};\n\nvar Pomodoro = Object.assign({}, UI, Application);\nPomodoro.init();\nPomodoro.listen();\n"],"sourceRoot":"/source/"}